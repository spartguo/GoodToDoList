<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dong.GW.list.Mapper.EventMapper" >
  <resultMap id="BaseResultMap" type="dong.GW.list.Entity.Event" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="DeadLine" property="deadline" jdbcType="TIMESTAMP" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="ClientId" property="clientid" jdbcType="INTEGER" />
    <result column="State" property="state" jdbcType="INTEGER" />
    <result column="Priority" property="priority" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="dong.GW.list.Entity.Event" extends="BaseResultMap" >
    <result column="Content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, DeadLine, CreateTime, ClientId, State, Priority
  </sql>
  <sql id="Blob_Column_List" >
    Content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="dong.GW.list.Entity.EventExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Todo_List
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="dong.GW.list.Entity.EventExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from Todo_List
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Todo_List
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Todo_List
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="dong.GW.list.Entity.EventExample" >
    delete from Todo_List
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="dong.GW.list.Entity.Event" >
    insert into Todo_List (Id, DeadLine, CreateTime, 
      ClientId, State, Priority, 
      Content)
    values (#{id,jdbcType=INTEGER}, #{deadline,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, 
      #{clientid,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="dong.GW.list.Entity.Event" >
    insert into Todo_List
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="deadline != null" >
        DeadLine,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="clientid != null" >
        ClientId,
      </if>
      <if test="state != null" >
        State,
      </if>
      <if test="priority != null" >
        Priority,
      </if>
      <if test="content != null" >
        Content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="clientid != null" >
        #{clientid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="dong.GW.list.Entity.EventExample" resultType="java.lang.Integer" >
    select count(*) from Todo_List
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Todo_List
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deadline != null" >
        DeadLine = #{record.deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null" >
        CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clientid != null" >
        ClientId = #{record.clientid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        State = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.priority != null" >
        Priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        Content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update Todo_List
    set Id = #{record.id,jdbcType=INTEGER},
      DeadLine = #{record.deadline,jdbcType=TIMESTAMP},
      CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      ClientId = #{record.clientid,jdbcType=INTEGER},
      State = #{record.state,jdbcType=INTEGER},
      Priority = #{record.priority,jdbcType=INTEGER},
      Content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Todo_List
    set Id = #{record.id,jdbcType=INTEGER},
      DeadLine = #{record.deadline,jdbcType=TIMESTAMP},
      CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      ClientId = #{record.clientid,jdbcType=INTEGER},
      State = #{record.state,jdbcType=INTEGER},
      Priority = #{record.priority,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="dong.GW.list.Entity.Event" >
    update Todo_List
    <set >
      <if test="deadline != null" >
        DeadLine = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="clientid != null" >
        ClientId = #{clientid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        State = #{state,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        Priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        Content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="dong.GW.list.Entity.Event" >
    update Todo_List
    set DeadLine = #{deadline,jdbcType=TIMESTAMP},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      ClientId = #{clientid,jdbcType=INTEGER},
      State = #{state,jdbcType=INTEGER},
      Priority = #{priority,jdbcType=INTEGER},
      Content = #{content,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dong.GW.list.Entity.Event" >
    update Todo_List
    set DeadLine = #{deadline,jdbcType=TIMESTAMP},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      ClientId = #{clientid,jdbcType=INTEGER},
      State = #{state,jdbcType=INTEGER},
      Priority = #{priority,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>